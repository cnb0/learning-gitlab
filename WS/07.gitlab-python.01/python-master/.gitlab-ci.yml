include:
  - local: tests/telmpates/security/SAST.gitlab-ci.yml
  - local: tests/telmpates/security/DAST.gitlab-ci.yml
  - local: tests/telmpates/security/Dependency-Scanning.gitlab-ci.yml
  - local: tests/telmpates/security/Container-Scanning.gitlab-ci.yml

container_scanning:
    stage: test
    variables:
        GIT_STRATEGY: fetch
        KLAR_TRACE: "true"
        CLAIR_TRACE: "true"

dast:
  stage: dast
  variables:
    DAST_WEBSITE: http://$INGRESS_ENDPOINT/

dependency_scanning:
  stage: test
  variables:
    CI_DEBUG_TRACE: "true"
    
sast:
  stage: test
  variables:
    CI_DEBUG_TRACE: "true"
  artifacts:
    reports:
      sast: gl-sast-report.json

unit:
  stage: unit-test
  image: python:alpine
  script:
    - pip install -r requirements.txt
    - python -m unittest tests/test_db.py

stages:
  - test
  - sonar-check
  - build
  - unit-test
  - dast
  - deploy


build_dev_image:
  stage: build
  tags:
    - shell
  script:
    - sleep 5
    - docker login -u $CI_REGISTRY_USERNAME -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build --tag $CI_REGISTRY/$CI_REGISTRY_IMAGE:latest -f .ci/Dockerfile .
    - docker push $CI_REGISTRY/$CI_REGISTRY_IMAGE:latest
    - DRUPAL_VERSION=latest
    - rm -rf .targets
    - echo $DRUPAL_VERSION >> .targets
  only:
    - develop
    - test
    # - master


sonarqube-check:
 stage: sonar-check
 image:
   name: sonarsource/sonar-scanner-cli:latest
   entrypoint: [""]
 variables:
   SONAR_HOST_URL: "http://sonarqube.new-aks-stage.linnovate.net"
   SONAR_LOGIN: "b8bafe2ec8467d6d96365c41d2992b30d7dcd107"
   SONAR_PROJECTKEY: "${CI_PROJECT_PATH}"
   SONAR_TOKEN: "b8bafe2ec8467d6d96365c41d2992b30d7dcd107"
   SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
   GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
 cache:
   key: "${CI_JOB_NAME}"
   paths:
     - .sonar/cache
 script:
   - sonar-scanner -Dsonar.qualitygate.wait=true -Dsonar.projectKey=${CI_PROJECT_PATH}  -Dsonar.sources=. -Dsonar.host.url=http://sonarqube.new-aks-stage.linnovate.net -Dsonar.login=b8bafe2ec8467d6d96365c41d2992b30d7dcd107
 allow_failure: true
 only:
   - merge_requests
   - master
   - develop
   - test

build_master_image:
  stage: build
  tags:
    - shell
  script:
    - docker login -u $CI_REGISTRY_USERNAME -p $CI_REGISTRY_PASSWORD $CI_REGISTRY 
    - docker build --tag $CI_REGISTRY/$CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA -f .ci/Dockerfile .
    - docker push $CI_REGISTRY/$CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA
  only:
    - master


deploy_to_dev_cluster:
  stage: deploy
  tags:
    - shell
  script:
    - | 
      curl -X POST \
      -F token=$CI_JOB_TOKEN \
      -F ref=master \
      -F "variables[SERVICES]=python" \
      -F "variables[PYTHON_VERSION]=latest" \
      -F "variables[ENV]=develop" \
      https://gitlab.linnovate.net/api/v4/projects/1122/trigger/pipeline
  only:
    - develop
    - test