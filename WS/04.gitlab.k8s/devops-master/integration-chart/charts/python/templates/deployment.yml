apiVersion: apps/v1
kind: Deployment
metadata:
  name: "python-deployment"
  namespace: {{ .Values.global.namespace }}
spec:
  replicas: {{ .Values.global.replicas.min }}
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate 
  selector:
    matchLabels:
      app: "python-deployment"
  template:
    metadata:
      labels:
        app: "python-deployment"
        version: "{{ .Values.app.version }}"
    spec:
      tolerations:            # make sure that pods will tolearate with every node 
        - operator: "Exists"  # even when spot instances exist
      nodeSelector:
        {{ .Values.nodeSelector }}
      containers:
      - name: "python-deployment"
        image: "{{ .Values.image.registry }}/{{ .Values.image.name }}:{{ .Values.image.tag }}"
        imagePullPolicy: Always
        ports:
        - containerPort: 80
        - containerPort: 443
        # volumeMounts:
        # - name: "python-volume"
        #   mountPath: /var/www/html/sites/default/files
        # resources:
          # requests:
          #   memory: "{{ .Values.global.resources.memory.requests }}"
          #   cpu: "{{ .Values.global.resources.cpu.requests }}"
          # limits:
          #   memory: "{{ .Values.global.resources.memory.limits }}"
          #   cpu: "{{ .Values.global.resources.cpu.limits }}"
        env:
          - name: SITE_URL
            value: "http://{{ .Values.app.host }}"
      imagePullSecrets:
      - name: "azure.regcreds"
      # volumes:
      # - name: "python-volume"
      #   persistentVolumeClaim:
      #     claimName: "python-storage"